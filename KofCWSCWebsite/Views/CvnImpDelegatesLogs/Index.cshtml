@model IEnumerable<KofCWSCWebsite.Models.CvnImpDelegatesLog>

@{
    ViewData["Title"] = "Index";
}

<h1>Delegate Import Logs</h1>
<p>
    <h6>Filter By:</h6>
    <input type="text" id="myGUID" onkeyup="filterGUID()" placeholder="Type in a GUID to filter results" title="Type in a GUID" style="width:20%">
    <input type="text" id="myRundate" onkeyup="filterRundate()" placeholder="Type in a RUNDATE to filter results" title="Type in a date" style="width:20%">
    <input type="text" id="myType" onkeyup="filterType()" placeholder="Type in a TYPE to filter results" title="Type in a letters" style="width:20%">
    <input type="text" id="myMemberID" onkeyup="filterMemberID()" placeholder="Type in a MEMBERID to filter results" title="Type in numbers" style="width:20%">
    <button id="resetFilters" class="btn btn-outline-success">Reset Filters</button>
</p>

<table class="table" id="myTable" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Guid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rundate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MemberId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Guid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rundate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MemberId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data)
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    const resetFilters = document.getElementById('resetFilters');
    const GUIDFilter = document.getElementById('myGUID');
    const runDateFilter = document.getElementById('myRundate');
    const typeFilter = document.getElementById('myType');
    const memberidFilter = document.getElementById('myMemberID');

    // Reset filters
    resetFilters.addEventListener('click', () => {
        GUIDFilter.value = '';
        runDateFilter.value = '';
        typeFilter.value = '';
        memberidFilter.value = '';
        filterGUID();
        filterRundate();
        filterType();
        filterMemberID();
    });

    function filterGUID() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myGUID");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
    function filterRundate() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myRundate");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
    function filterType() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myType");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
    function filterMemberID() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myMemberID");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[3];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>