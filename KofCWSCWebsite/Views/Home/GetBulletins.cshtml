@model IEnumerable<KofCWSCWebsite.Models.SPGetBulletins>

<table class="table" style="width:25%">
    <tr>
        <td class="MyColHdr" style="text-align:center">
            <h3>Washington State Council Bulletin Archive</h3>
        </td>
    </tr>
</table>

@* @{
    var enumerator = Model.GetEnumerator();
    int myCounter = 12;


    while (enumerator.MoveNext())
    {
        SPGetBulletins myModel = enumerator.Current;
        if (myCounter == 12)
        {
            <table class="table" style="width:100%">
                <thead>
                    <tr>
                        <th class="MyColHdr">
                            @Html.DisplayNameFor(model => myModel.Year)
                        </th>
                        <th class="MyColHdr">
                            @Html.DisplayNameFor(model => myModel.Bulletin)
                        </th>
                    </tr>
                </thead>
        }
        else
        {
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => myModel.Year)
                        </td>
                        <td>
                            @Html.Raw(myModel.Bulletin)
                        </td>
                    </tr>
                </tbody>
            </table>
        }
        myCounter -= 1;
        if (myCounter == 1) myCounter = 12;
        enumerator.MoveNext();
    }
} *@
<p>
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Type in a year to filter results" title="Type in a name" style="width:25%">
</p>
<table class="table" id="myTable" style="width:25%">
    <thead>
        <tr>
            <th class="MyColHdr">
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th class="MyColHdr">
                @Html.DisplayNameFor(model => model.Bulletin)
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    @Html.Raw(item.Bulletin)
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
